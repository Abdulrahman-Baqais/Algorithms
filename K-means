# -*- coding: utf-8 -*-
"""
Created on Thu Aug 31 00:45:22 2017

@author: Abdulrahman
"""
import numpy as np

def dataInitialization(x, no_clusters):
    x= np.zeros((no_points, point_size))
    for i  in range(point_size):
        x[:,i] = np.reshape ((maxLimit - minLimit) * np.random.random((no_points,1)) + (minLimit), no_points)
        
def centroidInitialization(x, no_clusters):
    c=[]
    for i in range (no_clusters):
        c.append([])
        
    for i in range (no_clusters):
        for j in range(x[0].size):
            a= np.random.random() * (np.max (x) - np.min(x)) + np.min(x)
            c[i].append(a)
    return c

def clusterInitialization(no_clusters):
    clusters =[]
    for i in range (no_clusters):
        clusters.append([])
    return clusters

def eculidean_distance(c,x):
    sum = 0
    for i in range (len (x.T)):
        sum = sum + (pow((c[i] - x[i]),2))
    return np.sqrt(sum)
    
def updateCentroids (clusters, c):
    
    for i in range(len(c)):
        sum=0
        for j in range (len(clusters)):
            sum += clusters [j][i]
        if (len (clusters) > 0) :
            c[i]= sum /len(clusters)
                

def distance (no_clusters):
    for  j in range (no_clusters):
        for i in range(len(x)):
            distance_matrix[j][i]= eculidean_distance(c[j], x[i])
            
        distanceT = distance_matrix.T
    return distanceT
    
point_size =5
maxLimit = 10
minLimit = -1 
no_points = 20

x= np.array ([[0,1], [4,7], [4,5], [4,6]]) 
no_clusters = 2
numberIterations = 20
c= centroidInitialization (x, no_clusters)
clusters = clusterInitialization (no_clusters)
distance_matrix = np.zeros ((no_clusters, len(x)))   

for no_iter in range (numberIterations):
    distanceT = distance (no_clusters)
    for i in range (len(x)):
        k= np.argmin(distanceT[i])
        clusters[k].append(x[i])
     
    if (no_iter < (numberIterations -1)):
         for i in range (no_clusters):
             clusters [i] =[]
             
    for i in range (no_clusters):
        updateCentroids (clusters [i], c[i])
