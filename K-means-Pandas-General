# -*- coding: utf-8 -*-
"""
Created on Thu Aug 31 00:45:22 2017

@author: Abdulrahman
"""
import pandas as pd

import numpy as np


no_points = 10
k= 5
no_iterations=200

data = pd.DataFrame ([np.random.randn(no_points), np.random.randn(no_points)] , index =['Xd', 'Yd'])

data = data.T

centers = pd.DataFrame([np.random.choice(data['Xd'],k) , np.random.choice(data['Yd'], k)], index = ['Xc', 'Yc'])

centers= centers.T
for i in range (no_iterations):
   
    
        X_diff = pd.DataFrame([  pow((data['Xd'] - centers['Xc'][i] ),2)   for i in range (centers['Xc'].size)])
        Y_diff = pd.DataFrame ([ pow (( data['Yd'] - centers['Yc'][i]) ,2) for i in range (centers['Yc'].size)])

        X_diff= X_diff.T
        Y_diff = Y_diff.T

        X_diff.columns = [ 'd' + str (i) for i in range(k)]
        Y_diff.columns = ['d' + str (i) for i in range(k)]

        Sum = X_diff.add(Y_diff, fill_value =0)

        distance =Sum.applymap(lambda x: np.sqrt(x))

        clusters = distance.idxmin(axis =1)
        
        cluster_index= pd.Series ([  clusters[clusters =='d' + str(i)].index for i in range (k) ])

        clusterX =  pd.DataFrame ([[  data['Xd'][cluster_index[j][i]]  for i in range(len (cluster_index[j])) ]for j in range (len(cluster_index))  ])
        clusterY =  pd.DataFrame ([[  data['Yd'][cluster_index[j][i]]  for i in range(len (cluster_index[j])) ]for j in range (len(cluster_index))  ])

        centersX = clusterX.mean(axis =1)
        centersY = clusterY.mean(axis =1)

        centers =pd.concat([centersX, centersY], axis =1)
        centers.columns = ['Xc', 'Yc']
  
